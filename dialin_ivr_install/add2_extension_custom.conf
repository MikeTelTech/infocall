 ========================================================================
; START InfoCall IVR Recording Feature additions (REVISED - AGI CENTRIC)
; ADD TO entension_custom.conf located in /etc/asterisk
; relies on 3 agi files located in /var/lib/asterisk/agi-bin/
; ivr_handler.agi   lookup_user_for_ivr.agi    check_passcode.agi
; ========================================================================

; Include the main entry point here if it wasn't already
exten => 732,1,NoOp(== Routing call to InfoCall IVR Recording Authentication ==)
exten => 732,n,Answer()
exten => 732,n,Wait(1)
; --- Perform Authentication First (Using your existing AGIs) ---
exten => 732,n,Set(CALLER_NUM=${CALLERID(num)})
exten => 732,n,AGI(/var/lib/asterisk/agi-bin/lookup_user_for_ivr.agi,${CALLER_NUM})
exten => 732,n,NoOp(Lookup Result: AUTH_STATUS=${AUTH_STATUS}, AUTH_USER_ID=${AUTH_USER_ID}, HASH_PRESENT=${IF($[${LEN(${EXPECTED_HASH})} > 0]?Yes:No)})
exten => 732,n,GotoIf($["${AUTH_STATUS}" != "FOUND"]?auth_fail)
; Ask for passcode (using Background allows interruption)
exten => 732,n,Set(TIMEOUT(digit)=7)
exten => 732,n,Set(TIMEOUT(response)=10)
exten => 732,n,Playback(custom/infocall-enter-passcode) ; "Please enter your passcode"
exten => 732,n,Read(ENTERED_PASSCODE,,6) ; Read up to 6 digits
exten => 732,n,AGI(/var/lib/asterisk/agi-bin/check_passcode.agi,${ENTERED_PASSCODE},${EXPECTED_HASH})
exten => 732,n,NoOp(Passcode Check Result: ${AUTH_RESULT})
exten => 732,n,GotoIf($["${AUTH_RESULT}" = "OK"]?auth_success:auth_fail)

; --- Authentication Success: Call the main IVR handler AGI ---
exten => 732,n(auth_success),NoOp(Authentication successful for user ${AUTH_USER_ID}. Starting IVR handler.)
; Pass the authenticated user ID as an argument
exten => 732,n,AGI(/var/lib/asterisk/agi-bin/ivr_handler.agi,${AUTH_USER_ID})
exten => 732,n,Hangup() ; Hangup after the main AGI script finishes

; --- Authentication Failure ---
exten => 732,n(auth_fail),NoOp(Authentication failed. Status: ${AUTH_STATUS}, Result: ${AUTH_RESULT})
exten => 732,n,Playback(custom/infocall-unauth-caller) ; "Authentication failed, goodbye"
exten => 732,n,Hangup()


; !!! REMOVE THE OLD [infocall-ivr-record] CONTEXT ENTIRELY !!!
; It is now replaced by the logic within ivr_handler.agi

; Make sure the h extension exists somewhere accessible for cleanup if needed
; This basic one logs the hangup cause.
; You might add DB cleanup here if the DB approach was used.
exten => h,1,NoOp(Generic h extension: Hanging up call. Cause: ${HANGUPCAUSE} - ${HANGUPCAUSE_KEYS})
exten => h,n,Hangup()


; End of InfoCall IVR changes
; ==============================================
